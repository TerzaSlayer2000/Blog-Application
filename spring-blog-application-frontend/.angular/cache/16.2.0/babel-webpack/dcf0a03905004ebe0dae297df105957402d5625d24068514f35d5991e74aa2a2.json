{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-webstorage\";\nexport let AuthService = /*#__PURE__*/(() => {\n  var _class;\n  class AuthService {\n    constructor(httpClient, localStoraqeService) {\n      this.httpClient = httpClient;\n      this.localStoraqeService = localStoraqeService;\n      this.url = 'http://localhost:8080/api/auth/';\n    }\n    register(registerPayload) {\n      return this.httpClient.post(this.url + 'signup', registerPayload);\n    }\n    login(loginPayload) {\n      return this.httpClient.post(this.url + 'login', loginPayload).pipe(map(data => {\n        this.localStoraqeService.store('authenticationToken', data.authenticationToken);\n        this.localStoraqeService.store('username', data.username);\n        return true;\n      }));\n    }\n    isAuthenticated() {\n      return this.localStoraqeService.retrieve('username') != null;\n    }\n    logout() {\n      this.localStoraqeService.clear('authenticationToken');\n      this.localStoraqeService.clear('username');\n    }\n  }\n  _class = AuthService;\n  _class.ɵfac = function AuthService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LocalStorageService));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}